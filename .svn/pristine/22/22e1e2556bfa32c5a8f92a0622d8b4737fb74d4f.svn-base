package com.servlet;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.util.FileOperate;
import com.util.MyLog;

public class historyServlet extends HttpServlet {

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		doPost(request, response);
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		response.setContentType("text/html");
		request.setCharacterEncoding("UTF-8");

		response.setContentType("text/html;charset=utf-8");
		response.setCharacterEncoding("utf-8");

		String SelectedCompanyName = getSelectedCompanyName(request);
		String tomcatHistoryCompanyDir = new String(request.getRealPath("/")
				+ "history" + File.separator + File.separator
				+ SelectedCompanyName);
		String command = request.getParameter("command");
		if (command == null) {
			PrintWriter out = response.getWriter();
			getPackHistoryFiles(out, SelectedCompanyName,
					tomcatHistoryCompanyDir);

		} else if (command.equals("delete")) {
			PrintWriter out = response.getWriter();
			try {

				String deleteFileName = request.getParameter("deleteFileName");
				String deleteFilePath = new String(getCompanyName.packSaveDir
						+ File.separator + SelectedCompanyName + File.separator
						+ deleteFileName);
				FileOperate.deleteFiles(deleteFilePath);
				out.println("success");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				out.println("error");
			}

		} else if (command.equals("download")) {

			String url = new String("downloadServlet?filePath="
					+ tomcatHistoryCompanyDir + File.separator
					+ request.getParameter("downloadFileName"));
			request.getRequestDispatcher(url).forward(request, response);
		}

	}

	/**
	 * @param out
	 * @param SelectedCompanyName
	 * @param tomcatHistoryCompanyDir
	 * @throws IOException
	 */
	private void getPackHistoryFiles(PrintWriter out,
			String SelectedCompanyName, String tomcatHistoryCompanyDir)
			throws IOException {
		// 本地的文件存在，就先删除,不存在，就创建
		initFile(tomcatHistoryCompanyDir);

		// 库里的文件存在，就复制过来
		String packSaveCompanyDir = new String(getCompanyName.packSaveDir
				+ File.separator + SelectedCompanyName);
		File packSaveCompanyFile = new File(packSaveCompanyDir);

		if (packSaveCompanyFile.exists()) {
			FileOperate.copyDir(packSaveCompanyDir, tomcatHistoryCompanyDir);
			File tomcatHistoryCompanyFile = new File(tomcatHistoryCompanyDir);
			// 列出历史目录下文件名
			String[] filesName = tomcatHistoryCompanyFile.list();
			// 返回json
			JSONObject js = new JSONObject();
			js.put("keys", filesName);
			String jsonString = JSON.toJSONString(js);
			jsonString = "callback(" + jsonString + ");";
			MyLog.logger.info(jsonString);
			out.println(jsonString);
		} else {
			// 返回空
			JSONObject js = new JSONObject();
			String jsonString = JSON.toJSONString(js);
			jsonString = "callback(" + jsonString + ");";
			MyLog.logger.info(jsonString);
			out.println(jsonString);
		}

		out.flush();
		out.close();
	}

	/**
	 * @param filePath
	 */
	private void initFile(String filePath) {
		File file = new File(filePath);
		if (file.exists()) {
			FileOperate.deleteFiles(filePath);
			file.mkdirs();
		} else {
			file.mkdirs();
		}
	}

	private String getSelectedCompanyName(HttpServletRequest request) {
		String selectedCompanyName = request.getSession()
				.getAttribute("selectedCompanyName").toString();
		return selectedCompanyName;
	}

}
