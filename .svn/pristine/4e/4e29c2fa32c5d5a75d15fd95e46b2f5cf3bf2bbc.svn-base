// 初始化Web Uploader
var uploader = WebUploader.create({

	// 选完文件后，是否自动上传。
	auto: true,

	// swf文件路径
	swf: 'js/Uploader.swf',

	// 文件接收服务端。
	server: 'http://192.168.1.171:8080/pack/uploaderServlet',

	// 选择文件的按钮。可选。
	// 内部根据当前运行是创建，可能是input元素，也可能是flash.
	pick: '#filePicker',

	//只允许选择图片文件。
	accept: {
		title: 'Images',
		extensions: 'gif,jpg,jpeg,bmp,png',
		mimeTypes: 'image/*'
	}
});

// 当有文件添加进来的时候
uploader.on('fileQueued', function(file) {
	var $li = $('<div id="' + file.id + '" class="file-item thumbnail">' + '<img>' + '<div class="info">' + file.name + '</div>' + '</div>'),
		$img = $li.find('img');

	var $list = $("#fileList");
	// $list为容器jQuery实例
	$list.append($li);

	// 创建缩略图
	// 如果为非图片文件，可以不用调用此方法。
	// thumbnailWidth x thumbnailHeight 为 100 x 100
	uploader.makeThumb(file, function(error, src) {
		if (error) {
			$img.replaceWith('<span>不能预览</span>');
			return;
		}

		$img.attr('src', src);
	}, 100, 100);
});

// 文件上传过程中创建进度条实时显示。
uploader.on('uploadProgress', function(file, percentage) {
	var $li = $('#' + file.id),
		$percent = $li.find('.progress span');

	// 避免重复创建
	if (!$percent.length) {
		$percent = $('<p class="progress"><span></span></p>').appendTo($li)
			.find('span');
	}

	$percent.css('width', percentage * 100 + '%');
});

// 文件上传成功，给item添加成功class, 用样式标记上传成功。
uploader.on('uploadSuccess', function(file) {
	$('#' + file.id).addClass('upload-state-done');


});

// 文件上传失败，显示上传出错。
uploader.on('uploadError', function(file) {
	var $li = $('#' + file.id),
		$error = $li.find('div.error');

	// 避免重复创建
	if (!$error.length) {
		$error = $('<div class="error"></div>').appendTo($li);
	}

	$error.text('上传失败');
});

// 完成上传完了，成功或者失败，先删除进度条。
uploader.on('uploadComplete', function(file) {
	$('#' + file.id).find('.progress').remove();

	//自动显示服务器上保存的图片名
	setTimeout(function() {

		getCompanyImages(encodeURI("/pack/getCompanyInfo"));

	}, 1000);
	//自动显示服务器上保存的图片名
	//getCompanyImages(encodeURI("/pack/getCompanyInfo"));
});



var opts = {
	lines: 13, // The number of lines to draw
	length: 20, // The length of each line
	width: 10, // The line thickness
	radius: 40, // The radius of the inner circle
	corners: 1, // Corner roundness (0..1)
	rotate: 0, // The rotation offset
	direction: 1, // 1: clockwise, -1: counterclockwise
	color: '#000', // #rgb or #rrggbb or array of colors
	speed: 0.5, // Rounds per second
	trail: 60, // Afterglow percentage
	shadow: false, // Whether to render a shadow
	hwaccel: false, // Whether to use hardware acceleration
	className: 'spinner', // The CSS class to assign to the spinner
	zIndex: 2e9, // The z-index (defaults to 2000000000)
	top: '50%', // Top position relative to parent
	left: '50%' // Left position relative to parent
};



function spinHidden() {

	document.getElementById("wait").style.display = "none";
}

function spinDisplay() {
	var target = document.getElementById('wait');
	var spinner = new Spinner(opts).spin(target);
	document.getElementById("wait").style.display = "block";
}